{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp\\\\www\\\\projecteFullStack\\\\part1\\\\part1\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Note } from './Note';\nimport { useEffect, useState } from 'react';\nimport { getAllNotes } from './notes/getAllnotes';\nimport { createNote } from './notes/createNote';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App(props) {\n  _s();\n  const [notes, setNotes] = useState(props.notes);\n  const [newNote, setNewNote] = useState(\"\");\n  // const [showAll, setShowAll] = useState(true)\n\n  useEffect(() => {\n    //una request  \n    getAllNotes().then(notes => setNotes(notes));\n  }, []); //el array es de dependencias, si no se le pasa nada se ejecuta solo una vez y si le pasamos algo se ejecuta cada vez que cambie ese valor\n\n  const handleChange = event => {\n    setNewNote(event.target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault(); // para evitar que se refresque la pagina\n    console.log(newNote);\n    const noteToAddToState = {\n      title: newNote,\n      body: newNote,\n      userId: 1\n    };\n    createNote(noteToAddToState).then(newNote => {\n      setNotes(prevNotes => prevNotes.concat(newNote));\n    });\n\n    //cada vez que queremos actualizar el estado queremos crear un array nuevo\n    setNewNote(\"\"); //para limpiar el input\n  };\n\n  // const handleShowAll = () =>{\n  //     setShowAll(() => !showAll)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ol\", {\n      children: notes\n      // .filter(note => {\n      //     if(showAll === true) return true\n      //     return note.important === true\n      // })\n      .map(note => /*#__PURE__*/_jsxDEV(Note, {\n        ...note\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 18\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: handleChange,\n        value: newNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Crear nota\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"f1ID552238Wy4ipenGBre0E2+fo=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Note","useEffect","useState","getAllNotes","createNote","App","props","notes","setNotes","newNote","setNewNote","then","handleChange","event","target","value","handleSubmit","preventDefault","console","log","noteToAddToState","title","body","userId","prevNotes","concat","map","note","id"],"sources":["C:/wamp/www/projecteFullStack/part1/part1/src/App.js"],"sourcesContent":["import {Note} from './Note'\nimport {useEffect, useState} from 'react'\nimport { getAllNotes } from './notes/getAllnotes'\nimport { createNote } from './notes/createNote'\n\nexport default function App(props) {\n    \n    const [notes, setNotes] = useState(props.notes)\n    const [newNote, setNewNote] = useState(\"\")\n   // const [showAll, setShowAll] = useState(true)\n\n    useEffect(() => { //una request  \n        getAllNotes().then((notes) => setNotes(notes))\n    }, [])//el array es de dependencias, si no se le pasa nada se ejecuta solo una vez y si le pasamos algo se ejecuta cada vez que cambie ese valor\n\n    const handleChange = (event) =>{\n        setNewNote(event.target.value)\n    }\n\n    const handleSubmit = (event) =>{\n        event.preventDefault() // para evitar que se refresque la pagina\n        console.log(newNote)\n        const noteToAddToState = {\n    \n            title: newNote,\n            body: newNote,\n            userId: 1\n        }\n        createNote(noteToAddToState).then(newNote => {\n            setNotes((prevNotes) => prevNotes.concat(newNote))\n        })\n        \n        //cada vez que queremos actualizar el estado queremos crear un array nuevo\n        setNewNote(\"\") //para limpiar el input\n    }\n\n    // const handleShowAll = () =>{\n    //     setShowAll(() => !showAll)\n    // }\n\n    return ( \n        <div>\n            {/* <button onClick={handleShowAll}>{showAll ? \"Show only important\" : \"Show all\"}</button> */}\n            <ol>\n                {notes\n                // .filter(note => {\n                //     if(showAll === true) return true\n                //     return note.important === true\n                // })\n                .map((note) =>\n                 <Note key={note.id} {...note}/>\n                 )}\n            </ol>\n            <form onSubmit={handleSubmit}>\n                <input type='text' onChange={handleChange} value={newNote}></input>\n                <button>Crear nota</button>\n            </form>\n        </div>\n    )\n}\n"],"mappings":";;AAAA,SAAQA,IAAI,QAAO,QAAQ;AAC3B,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,UAAU,QAAQ,oBAAoB;AAAA;AAE/C,eAAe,SAASC,GAAG,CAACC,KAAK,EAAE;EAAA;EAE/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAACI,KAAK,CAACC,KAAK,CAAC;EAC/C,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC3C;;EAECD,SAAS,CAAC,MAAM;IAAE;IACdE,WAAW,EAAE,CAACQ,IAAI,CAAEJ,KAAK,IAAKC,QAAQ,CAACD,KAAK,CAAC,CAAC;EAClD,CAAC,EAAE,EAAE,CAAC;;EAEN,MAAMK,YAAY,GAAIC,KAAK,IAAI;IAC3BH,UAAU,CAACG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EAED,MAAMC,YAAY,GAAIH,KAAK,IAAI;IAC3BA,KAAK,CAACI,cAAc,EAAE,EAAC;IACvBC,OAAO,CAACC,GAAG,CAACV,OAAO,CAAC;IACpB,MAAMW,gBAAgB,GAAG;MAErBC,KAAK,EAAEZ,OAAO;MACda,IAAI,EAAEb,OAAO;MACbc,MAAM,EAAE;IACZ,CAAC;IACDnB,UAAU,CAACgB,gBAAgB,CAAC,CAACT,IAAI,CAACF,OAAO,IAAI;MACzCD,QAAQ,CAAEgB,SAAS,IAAKA,SAAS,CAACC,MAAM,CAAChB,OAAO,CAAC,CAAC;IACtD,CAAC,CAAC;;IAEF;IACAC,UAAU,CAAC,EAAE,CAAC,EAAC;EACnB,CAAC;;EAED;EACA;EACA;;EAEA,oBACI;IAAA,wBAEI;MAAA,UACKH;MACD;MACA;MACA;MACA;MAAA,CACCmB,GAAG,CAAEC,IAAI,iBACT,QAAC,IAAI;QAAA,GAAmBA;MAAI,GAAjBA,IAAI,CAACC,EAAE;QAAA;QAAA;QAAA;MAAA,QAAa;IAC9B;MAAA;MAAA;MAAA;IAAA,QACD,eACL;MAAM,QAAQ,EAAEZ,YAAa;MAAA,wBACzB;QAAO,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAEJ,YAAa;QAAC,KAAK,EAAEH;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAS,eACnE;QAAA,UAAQ;MAAU;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACxB;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEd;AAAC,GAtDuBJ,GAAG;AAAA,KAAHA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}