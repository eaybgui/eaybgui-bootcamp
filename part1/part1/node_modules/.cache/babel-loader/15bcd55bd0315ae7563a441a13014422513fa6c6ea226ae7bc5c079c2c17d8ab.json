{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp\\\\www\\\\projecteFullStack\\\\part1\\\\part1\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Note } from './Note';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App(props) {\n  _s();\n  const [notes, setNotes] = useState(props.notes);\n  const [newNote, setNewNote] = useState('');\n  const handleChange = event => {\n    console.log({\n      event\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ol\", {\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        ...note\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Crear nota\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"khOXYFoxXozbalzJirFcJ4KGiP8=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Note","useState","App","props","notes","setNotes","newNote","setNewNote","handleChange","event","console","log","map","note","id"],"sources":["C:/wamp/www/projecteFullStack/part1/part1/src/App.js"],"sourcesContent":["import {Note} from './Note'\nimport {useState} from 'react'\n\nexport default function App(props) {\n    \n    const [notes, setNotes] = useState(props.notes)\n    const [newNote, setNewNote] = useState('')\n\n    const handleChange = (event) =>{\n        console.log({event})\n    }\n\n    return ( \n        <div>\n            <ol>\n                {notes.map((note) => <Note key={note.id} {...note}/>)}\n            </ol>\n            <div>\n                <input type='text' onChange={handleChange}></input>\n                <button>Crear nota</button>\n            </div>\n        </div>\n    )\n}\n"],"mappings":";;AAAA,SAAQA,IAAI,QAAO,QAAQ;AAC3B,SAAQC,QAAQ,QAAO,OAAO;AAAA;AAE9B,eAAe,SAASC,GAAG,CAACC,KAAK,EAAE;EAAA;EAE/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAACE,KAAK,CAACC,KAAK,CAAC;EAC/C,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMO,YAAY,GAAIC,KAAK,IAAI;IAC3BC,OAAO,CAACC,GAAG,CAAC;MAACF;IAAK,CAAC,CAAC;EACxB,CAAC;EAED,oBACI;IAAA,wBACI;MAAA,UACKL,KAAK,CAACQ,GAAG,CAAEC,IAAI,iBAAK,QAAC,IAAI;QAAA,GAAmBA;MAAI,GAAjBA,IAAI,CAACC,EAAE;QAAA;QAAA;QAAA;MAAA,QAAa;IAAC;MAAA;MAAA;MAAA;IAAA,QACpD,eACL;MAAA,wBACI;QAAO,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAEN;MAAa;QAAA;QAAA;QAAA;MAAA,QAAS,eACnD;QAAA,UAAQ;MAAU;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACzB;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,GApBuBN,GAAG;AAAA,KAAHA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}