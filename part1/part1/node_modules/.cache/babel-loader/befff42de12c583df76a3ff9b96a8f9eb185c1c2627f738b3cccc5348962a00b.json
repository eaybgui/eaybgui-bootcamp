{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp\\\\www\\\\projecteFullStack\\\\part1\\\\part1\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Note } from './Note';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App(props) {\n  _s();\n  const [notes, setNotes] = useState(props.notes);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n  const handleChange = event => {\n    setNewNote(event.target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault(); // para evitar que se refresque la pagina\n    console.log(newNote);\n    const noteToAddToState = {\n      id: notes.length + 1,\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5\n    };\n    //cada vez que queremos actualizar el estado queremos crear un array nuevo\n    setNotes(notes.concat(noteToAddToState));\n    setNewNote(\"\"); //para limpiar el input\n  };\n\n  const handleShowAll = () => {\n    setShowAll(() => !showAll);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleShowAll,\n      children: showAll ? \"Show only importatn\" : \"Show all\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        ...note\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: handleChange,\n        value: newNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Crear nota\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"CRUecEDfh49fjqpxOYA5GIex/gg=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Note","useState","App","props","notes","setNotes","newNote","setNewNote","showAll","setShowAll","handleChange","event","target","value","handleSubmit","preventDefault","console","log","noteToAddToState","id","length","content","date","Date","toISOString","important","Math","random","concat","handleShowAll","map","note"],"sources":["C:/wamp/www/projecteFullStack/part1/part1/src/App.js"],"sourcesContent":["import {Note} from './Note'\nimport {useState} from 'react'\n\nexport default function App(props) {\n    \n    const [notes, setNotes] = useState(props.notes)\n    const [newNote, setNewNote] = useState(\"\")\n    const [showAll, setShowAll] = useState(true)\n\n    const handleChange = (event) =>{\n        setNewNote(event.target.value)\n    }\n\n    const handleSubmit = (event) =>{\n        event.preventDefault() // para evitar que se refresque la pagina\n        console.log(newNote)\n        const noteToAddToState = {\n            id: notes.length + 1,\n            content: newNote,\n            date: new Date().toISOString(),\n            important: Math.random() < 0.5\n        }\n        //cada vez que queremos actualizar el estado queremos crear un array nuevo\n        setNotes(notes.concat(noteToAddToState))\n        setNewNote(\"\") //para limpiar el input\n    }\n    const handleShowAll = () =>{\n        setShowAll(() => !showAll)\n    }\n\n    return ( \n        <div>\n            <button onClick={handleShowAll}>{showAll ? \"Show only importatn\" : \"Show all\"}</button>\n            <ol>\n                {notes.map((note) => <Note key={note.id} {...note}/>)}\n            </ol>\n            <form onSubmit={handleSubmit}>\n                <input type='text' onChange={handleChange} value={newNote}></input>\n                <button>Crear nota</button>\n            </form>\n        </div>\n    )\n}\n"],"mappings":";;AAAA,SAAQA,IAAI,QAAO,QAAQ;AAC3B,SAAQC,QAAQ,QAAO,OAAO;AAAA;AAE9B,eAAe,SAASC,GAAG,CAACC,KAAK,EAAE;EAAA;EAE/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAACE,KAAK,CAACC,KAAK,CAAC;EAC/C,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMS,YAAY,GAAIC,KAAK,IAAI;IAC3BJ,UAAU,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EAED,MAAMC,YAAY,GAAIH,KAAK,IAAI;IAC3BA,KAAK,CAACI,cAAc,EAAE,EAAC;IACvBC,OAAO,CAACC,GAAG,CAACX,OAAO,CAAC;IACpB,MAAMY,gBAAgB,GAAG;MACrBC,EAAE,EAAEf,KAAK,CAACgB,MAAM,GAAG,CAAC;MACpBC,OAAO,EAAEf,OAAO;MAChBgB,IAAI,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;MAC9BC,SAAS,EAAEC,IAAI,CAACC,MAAM,EAAE,GAAG;IAC/B,CAAC;IACD;IACAtB,QAAQ,CAACD,KAAK,CAACwB,MAAM,CAACV,gBAAgB,CAAC,CAAC;IACxCX,UAAU,CAAC,EAAE,CAAC,EAAC;EACnB,CAAC;;EACD,MAAMsB,aAAa,GAAG,MAAK;IACvBpB,UAAU,CAAC,MAAM,CAACD,OAAO,CAAC;EAC9B,CAAC;EAED,oBACI;IAAA,wBACI;MAAQ,OAAO,EAAEqB,aAAc;MAAA,UAAErB,OAAO,GAAG,qBAAqB,GAAG;IAAU;MAAA;MAAA;MAAA;IAAA,QAAU,eACvF;MAAA,UACKJ,KAAK,CAAC0B,GAAG,CAAEC,IAAI,iBAAK,QAAC,IAAI;QAAA,GAAmBA;MAAI,GAAjBA,IAAI,CAACZ,EAAE;QAAA;QAAA;QAAA;MAAA,QAAa;IAAC;MAAA;MAAA;MAAA;IAAA,QACpD,eACL;MAAM,QAAQ,EAAEL,YAAa;MAAA,wBACzB;QAAO,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAEJ,YAAa;QAAC,KAAK,EAAEJ;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAS,eACnE;QAAA,UAAQ;MAAU;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACxB;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEd;AAAC,GAvCuBJ,GAAG;AAAA,KAAHA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}